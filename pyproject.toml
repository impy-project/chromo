[build-system]
requires = [
    "meson-python>=0.13.0",
    "meson>=1.0.0",
    "ninja",
    "numpy==2.2.3",
    "charset_normalizer",
    "tomli"
]
build-backend = "mesonpy"

[project]
name = "chromo"
version = "0.8.0"
description = "Hadronic Interaction Model interface in Python"
readme = {file = "README.md", content-type = "text/markdown"}
requires-python = ">=3.9"
license = {text = "BSD 3-Clause License"}
authors = [
    {name = "Anatoli Fedynitch", email = "afedynitch@gmail.com"}
]
maintainers = [
    {name = "Anatoli Fedynitch", email = "afedynitch@gmail.com"}
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Topic :: Scientific/Engineering :: Physics",
    "Intended Audience :: Science/Research",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "License :: OSI Approved :: BSD License",
    "License :: OSI Approved :: GNU Library or Lesser General Public License (LGPL)",
]
dependencies = [
    "numpy",
    "scipy",
    "particle",
    "rich",
]

[project.urls]
Homepage = "https://github.com/impy-project/chromo"
Download = "https://pypi.python.org/pypi/chromo"

[project.scripts]
chromo = "chromo.cli:main"

[project.optional-dependencies]
test = [
    "pytest",
    "pytest-benchmark",
    "pytest-xdist",
    "pyhepmc>=2.13.2",
    "uproot",
    "awkward",
    "pyyaml",
    "boost_histogram",
    "matplotlib",
]
examples = [
    "boost-histogram",
    "matplotlib",
    "tqdm",
    "joblib",
]

[tool.black]
line-length = 88

[tool.mypy]
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-q -ra --ff -n auto"
testpaths = ["tests"]
filterwarnings = ["error::FutureWarning", "error::DeprecationWarning"]

[tool.chromo]
# Enabled models
enabled-models = [
    "eposlhc",
    "sib21",
    "sib23",
    "sib23d",
    "sib23d_star",
    "sib23e",
    "sib23e_star",
    "sib23c01",
    "qgsII03",
    "qgsII04",
    "qgsIII",
    "pythia6",
    "sophia",
    "dpmjet307",
    "phojet112",
    "phojet191",
    "phojet193",
    "dpmjetIII191",
    "dpmjetIII193",
    "urqmd34",
]
disabled-models = [
    "qgs01",
    "pythia8",
]
[tool.flake8]
max-line-length = 90
extend-ignore = "E203"

[tool.pydocstyle]
convention = "numpy"

[tool.cibuildwheel]
# update skip when numpy wheels become available
skip = ["*-musllinux_*", "cp31?-win32", "*-manylinux_i686"]
test-extras = ["test"]
test-command = "python {package}/download_data.py && python -m pytest -vv {package}/tests"
test-skip = ["*universal2:arm64"]
# to match numpy, we use manylinux2014 for cp310+
manylinux-x86_64-image = "manylinux2014"
manylinux-i686-image = "manylinux2014"
# Increase the output of pip wheel to -vvv
build-verbosity = 1

[tool.cibuildwheel.environment]
# this makes sure that we build only on platforms that have a corresponding numpy wheel
PIP_ONLY_BINARY = ":all:"
CIBW = "1"

[[tool.cibuildwheel.overrides]]
# to match numpy, we use manylinux2010 for cp36 to cp39
select = "cp3?-*"
manylinux-x86_64-image = "manylinux2010"
manylinux-i686-image = "manylinux2010"
